[
    $parent: /nebula/abstractions/Element/v1
    $description: "
        This class defines the methods for the functions and operations that all angles support.
    "($mediaType: "application/bsmd")
    $libraries: [
        /nebula/libraries/Radial/v1
        /nebula/libraries/Scalable/v1
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $interfaces: [
        /nebula/interfaces/Continuous/v1
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $operations: [
        $degrees: [
            $description: "
                This operation returns this angle as the number of degrees in the range [-180<..<180].
            "($mediaType: "application/bsmd")
            $type: /nebula/interfaces/Continuous/v1($range: [-180<..180])
        ]($type: /nebula/aspects/Operation/v1)
        $radians: [
            $description: "
                This operation returns this angle as the number of radians in the range [-π<..<π].
            "($mediaType: "application/bsmd")
            $type: /nebula/interfaces/Continuous/v1($range: [-π<..π])
        ]($type: /nebula/aspects/Operation/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Operation/v1))
    $methods: [
        $real: [
            $description: "
                This method implements the `$real` operation defined in the
                `/nebula/interfaces/Continuous/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return real(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $real WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3801C8625000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $degrees: [
            $description: "
                This method implements the `$degrees` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return degrees(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $degrees WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3801C8215000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $radians: [
            $description: "
                This method implements the `$radians` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return radians(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $radians WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3801C85E5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Inverse: [
            $description: "
                This method implements the `$Inverse` function defined in the
                `/nebula/libraries/Scalable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return inverse(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $inverse WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C83B5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $scalable: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Sum: [
            $description: "
                This method implements the `$Sum` function defined in the
                `/nebula/libraries/Scalable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return sum(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $first
                PUSH ARGUMENT $second
                CALL $sum WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38023803D07F5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $first: none
                $second: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Difference: [
            $description: "
                This method implements the `$Difference` function defined in the
                `/nebula/libraries/Scalable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return difference(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $first
                PUSH ARGUMENT $second
                CALL $difference WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38023803D0225000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $first: none
                $second: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Scaled: [
            $description: "
                This method implements the `$Scaled` function defined in the
                `/nebula/libraries/Scalable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return scaled(angle, factor)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                PUSH ARGUMENT $factor
                CALL $scaled WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '60013803D06D5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $scalable: none
                $factor: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Conjugate: [
            $description: "
                This method implements the `$Conjugate` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return conjugate(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $conjugate WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C81B5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Complement: [
            $description: "
                This method implements the `$Complement` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return complement(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $complement WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C8195000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Supplement: [
            $description: "
                This method implements the `$Supplement` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return supplement(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $supplement WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C8805000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Sine: [
            $description: "
                This method implements the `$Sine` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return sine(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $sine WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C8795000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Arcsine: [
            $description: "
                This method implements the `$Arcsine` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return arcsine(ratio)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $ratio
                CALL $arcsine WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3802C8055000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $ratio: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Cosine: [
            $description: "
                This method implements the `$Cosine` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return cosine(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $cosine WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C81D5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Arccosine: [
            $description: "
                This method implements the `$Arccosine` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return arccosine(ratio)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $ratio
                CALL $arccosine WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3802C8045000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $ratio: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Tangent: [
            $description: "
                This method implements the `$Tangent` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return tangent(angle)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $angle
                CALL $tangent WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '6001C8825000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $radial: none
            ]
            $variables: [
                $angle
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
        $Arctangent: [
            $description: "
                This method implements the `$Arctangent` function defined in the
                `/nebula/libraries/Radial/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return arctangent(opposite, adjacent)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $opposite
                PUSH ARGUMENT $adjacent
                CALL $arctangent WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38023803D0065000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $opposite: none
                $adjacent: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
            $addresses: [
                "1.ReturnStatement": 1
            ]
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
    $literals: [ ]($type: /nebula/collections/Set/v1)
](
    $type: /nebula/types/Primitive/v1
    $tag: #XTJ7438CYZX69LFCS5AX73PVH40MY8KQ
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
