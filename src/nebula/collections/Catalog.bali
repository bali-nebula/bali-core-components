[
    $parent: /nebula/abstractions/Collection/v1($itemType: /nebula/collections/Association/v1($keyType: keyType, $valueType: valueType))
    $description: "
        This primitive type defines the operations that a catalog component can respond to. It
        also provides a compiled method implementation for each operation.
    "($mediaType: "application/bsmd")
    $parameters: [
        $keyType: [
            $description: "
                This parameter specifies the name of the type of the keys in the catalog.
            "($mediaType: "application/bsmd")
            $type: /nebula/strings/Name/v1
            $default: /nebula/strings/Symbol/v1
        ]($type: /nebula/aspects/Parameter/v1)
        $valueType: [
            $description: "
                This parameter specifies the name of the type of the values in the catalog.
            "($mediaType: "application/bsmd")
            $type: /nebula/strings/Name/v1
            $default: /nebula/abstractions/Component/v1
        ]($type: /nebula/aspects/Parameter/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
    $libraries: [
        /nebula/libraries/Chainable/v1($itemType: /nebula/collections/Association/v1($keyType: keyType, $valueType: valueType))
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $interfaces: [
        /nebula/interfaces/Composite/v1(
            $keyType: keyType
            $valueType: valueType
        )
        /nebula/interfaces/Sortable/v1($itemType: /nebula/collections/Association/v1($keyType: keyType, $valueType: valueType))
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $functions: [
        $Extraction: [
            $description: "
                This operation returns the the subset of attributes from the specified catalog based on
                the specified keys.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/Catalog/v1(
                $keyType: keyType
                $valueType: valueType
            )
            $parameters: [
                $catalog: [
                    $description: "
                        This parameter specifies the catalog to be extracted from.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/collections/Catalog/v1(
                        $keyType: keyType
                        $valueType: valueType
                    )
                ]($type: /nebula/aspects/Parameter/v1)
                $keys: [
                    $description: "
                        This parameter specifies the list of keys to be used to extract the values.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/collections/List/v1($itemType: keyType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Function/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Function/v1))
    $operations: [
        $keys: [
            $description: "
                This operation returns a list of the keys for this catalog.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: keyType)
        ]($type: /nebula/aspects/Operation/v1)
        $removeAttribute: [
            $description: "
                This operation removes the attribute value associated with the specified key
                from this catalog.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/Catalog/v1(
                $keyType: keyType
                $valueType: valueType
            )
            $parameters: [
                $key: [
                    $description: "
                        This parameter specifies the key to be used to extract the attribute value.
                    "($mediaType: "application/bsmd")
                    $type: keyType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $removeAttributes: [
            $description: "
                This operation removes the attribute values associated with the specified list of keys
                from this catalog.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/Catalog/v1(
                $keyType: keyType
                $valueType: valueType
            )
            $parameters: [
                $keys: [
                    $description: "
                        This parameter specifies the list of keys to be used to extract the
                        attribute values.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/collections/List/v1($itemType: keyType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Operation/v1))
    $methods: [
        $keys: [
            $description: "
                This method implements the `$keys` operation for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return keys(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $removeAttribute: [
            $description: "
                This method implements the `$removeAttribute` operation for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return removeAttribute(target, key)
            }
        ]($type: /nebula/aspects/Method/v1)
        $removeAttributes: [
            $description: "
                This method implements the `$removeAttributes` operation for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $key in keys do {
                    removeAttribute(target, key)
                }
                return target
            }
        ]($type: /nebula/aspects/Method/v1)
        $sortItems: [
            $description: "
                This method implements the `$sortItems` operation from the
                `/nebula/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return sortItems(target, sorter)
            }
        ]($type: /nebula/aspects/Method/v1)
        $reverseItems: [
            $description: "
                This method implements the `$reverseItems` operation from the
                `/nebula/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return reverseItems(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $setAttribute: [
            $description: "
                This method implements the `$setAttribute` operation from the
                `/nebula/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return setAttribute(target, key, value)
            }
        ]($type: /nebula/aspects/Method/v1)
        $attribute: [
            $description: "
                This method implements the `$attribute` operation from the
                `/nebula/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return attribute(target, key)
            }
        ]($type: /nebula/aspects/Method/v1)
        $attributes: [
            $description: "
                This method implements the `$attributes` operation for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := [ ]
                with each $key in keys do {
                    addItem(result, attribute(target, key))
                }
                return result
            }
        ]($type: /nebula/aspects/Method/v1)
        $Extraction: [
            $description: "
                This method implements the `$Extraction` function for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := duplicate(catalog, true)
                with each $key in keys do {
                    setAttribute(result, key, attribute(catalog, key))
                }
                return result
            }
        ]($type: /nebula/aspects/Method/v1)
        $Chain: [
            $description: "
                This method implements the `$Chain` function specified in the
                `/nebula/libraries/Chainable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return chain(first, second)
            }
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
](
    $type: /nebula/types/Primitive/v1
    $tag: #455135X1XN4R3QN43F1ZV4GJ02XBSRP0
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
