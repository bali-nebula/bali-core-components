[
    $parent: /nebula/abstractions/Collection/v1($itemType: itemType)
    $description: "
        This primitive type defines the operations that a list component can respond to. It
        also provides a compiled method implementation for each operation.
    "($mediaType: "application/bsmd")
    $parameters: [
        $itemType: [
            $description: "
                This parameter specifies the name of the type of the values in the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/strings/Name/v1
            $default: /nebula/abstractions/Component/v1
        ]($type: /nebula/aspects/Parameter/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
    $libraries: [
        /nebula/libraries/Chainable/v1($itemType: itemType)
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $interfaces: [
        /nebula/interfaces/Composite/v1(
            $keyType: /nebula/interfaces/Discrete/v1
            $valueType: itemType
        )
        /nebula/interfaces/Sortable/v1($itemType: itemType)
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $operations: [
        $setItem: [
            $description: "
                This operation sets the item at the specified index in the list to the specified value.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
            $parameters: [
                $index: [
                    $description: "
                        This parameter specifies the index of the item in the list to be set.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/interfaces/Discrete/v1
                ]($type: /nebula/aspects/Parameter/v1)
                $item: [
                    $description: "
                        This parameter specifies the item to be associated with the specified index.
                    "($mediaType: "application/bsmd")
                    $type: itemType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $insertItem: [
            $description: "
                This operation inserts the specified item at the specified slot in the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
            $parameters: [
                $slot: [
                    $description: "
                        This parameter specifies the slot before the item in the list to insert the new item.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/interfaces/Discrete/v1
                ]($type: /nebula/aspects/Parameter/v1)
                $item: [
                    $description: "
                        This parameter specifies the item to be inserted into the list.
                    "($mediaType: "application/bsmd")
                    $type: itemType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $insertItems: [
            $description: "
                This operation inserts the specified items at the specified slot in the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
            $parameters: [
                $slot: [
                    $description: "
                        This parameter specifies the slot before the item in the list to insert the new items.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/interfaces/Discrete/v1
                ]($type: /nebula/aspects/Parameter/v1)
                $items: [
                    $description: "
                        This parameter specifies the items to be inserted into the list.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/abstractions/Collection/v1($itemType: itemType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $removeItem: [
            $description: "
                This operation removes the item at the specified index from the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
            $parameters: [
                $index: [
                    $description: "
                        This parameter specifies the index of the item in the list to be removed.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/interfaces/Discrete/v1
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $removeItems: [
            $description: "
                This operation removes the items in the specified range from the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
            $parameters: [
                $range: [
                    $description: "
                        This parameter specifies the range of items in the list to be removed.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/collections/Range/v1($type: /nebula/interfaces/Discrete/v1)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $shuffleItems: [
            $description: "
                This operation randomly shuffles the items in the list.
            "($mediaType: "application/bsmd")
            $type: /nebula/collections/List/v1($itemType: itemType)
        ]($type: /nebula/aspects/Operation/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Operation/v1))
    $methods: [
        $setItem: [
            $description: "
                This method implements the `$setItem` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return setItem(target, index, item)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $index
                PUSH ARGUMENT $item
                CALL $setItem WITH 3 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '380138023803D8765000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $index: none
                $item: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $insertItem: [
            $description: "
                This method implements the `$insertItem` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return insertItem(target, slot, item)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $slot
                PUSH ARGUMENT $item
                CALL $insertItem WITH 3 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '380138023803D8365000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $slot: none
                $item: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $insertItems: [
            $description: "
                This method implements the `$insertItems` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return insertItems(target, slot, items)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $slot
                PUSH ARGUMENT $items
                CALL $insertItems WITH 3 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '380138023803D8375000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $slot: none
                $items: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $removeItem: [
            $description: "
                This method implements the `$removeItem` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return removeIndex(target, index)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $index
                CALL $removeIndex WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38013802D0695000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $index: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $removeItems: [
            $description: "
                This method implements the `$removeItems` operation defined in this type.
            "($mediaType: "application/bsmd")
            $procedure: {
                return removeIndices(target, indices)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $indices
                CALL $removeIndices WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38016001D06A5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $range: none
            ]
            $variables: [
                $indices
            ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $shuffleItems: [
            $description: "
                This method implements the `$shuffleItems` operation defined in the
                `/nebula/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return shuffleItems(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $shuffleItems WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3801C87A5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $sortItems: [
            $description: "
                This method implements the `$sortItems` operation defined in the
                `/nebula/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return sortItems(target, sorter)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $sorter
                CALL $sortItems WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38013802D07D5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $sorter: none
                $comparator: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $reverseItems: [
            $description: "
                This method implements the `$reverseItems` operation defined in the
                `/nebula/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return reverseItems(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $reverseItems WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '3801C86D5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $setAttribute: [
            $description: "
                This method implements the `$setAttribute` operation defined in the
                `/nebula/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return setAttribute(target, key, value)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $key
                PUSH ARGUMENT $value
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '380138023803D8745000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $key: none
                $value: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $attribute: [
            $description: "
                This method implements the `$attribute` operation defined in the
                `/nebula/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return attribute(target, key)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                PUSH ARGUMENT $key
                CALL $attribute WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38013802D00A5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $key: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
        $Chain: [
            $description: "
                This method implements the `$Chain` function defined in the
                `/nebula/libraries/Chainable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return chain(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $first
                PUSH ARGUMENT $second
                CALL $chain WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $bytecode: '38023803D0135000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target: none
                $first: none
                $second: none
            ]
            $variables: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $messages: [ ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Symbol/v1))
            $addresses: [
                "1.ReturnStatement": 1
            ](
                $keyType: /nebula/strings/Text/v1
                $valueType: /nebula/interfaces/Discrete/v1
            )
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
    $literals: [ ]($type: /nebula/collections/Set/v1)
](
    $type: /nebula/types/Primitive/v1
    $tag: #QTGVXYK9W1BAML2DV4A0N6FCH7G4XHCV
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
