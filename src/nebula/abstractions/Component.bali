[
    $parent: none
    $description: "
        This abstract primitive type defines the operations that all components can respond to. It
        also provides a compiled method implementation for some of the operations.
    "($mediaType: "application/bsmd")
    $operations: [
        $isType: [
            $description: "
                This operation determines whether or not this component is of the specified type.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
            $parameters: [
                $type: [
                    $description: "
                        This parameter specifies the name of the candidate type.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/entities/Name/v1
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $type: [
            $description: "
                This operation returns the name of the type of this component.
            "($mediaType: "application/bsmd")
            $type: /nebula/strings/Name/v1
        ]($type: /nebula/aspects/Operation/v1)
        $ancestry: [
            $description: "
                This operation returns a sequence containing the names of the types in the ancestry
                for this component.
            "($mediaType: "application/bsmd")
            $type: /nebula/interfaces/Sequential/v1($itemType: /nebula/strings/Name/v1)
        ]($type: /nebula/aspects/Operation/v1)
        $isParameterized: [
            $description: "
                This operation determines whether or not this component is parameterized.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
        ]($type: /nebula/aspects/Operation/v1)
        $parameter: [
            $description: "
                This operation returns the parameter value associated with the specified key, or
                `none` if there is no parameter with the specified key.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
            $parameters: [
                $key: [
                    $description: "
                        This parameter specifies the key for the desired parameter.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/entities/Symbol/v1
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $parameters: [
            $description: "
                This operation returns a structure containing the key-value pairs for each parameter
                associated with this component.
            "($mediaType: "application/bsmd")
            $type: /nebula/interfaces/Composite/v1
        ]($type: /nebula/aspects/Operation/v1)
        $boolean: [
            $description: "
                This operation returns whether of not this component has a meaningful state that is
                worth operating on.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean
        ]($type: /nebula/aspects/Operation/v1)
        $accept: [
            $description: "
                This operation accepts a visitor agent and allows that agent to operate on this component.
            "($mediaType: "application/bsmd")
            $type: none
            $parameters: [
                $visitor: [
                    $description: "
                        This parameter specifies the visitor agent.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/agents/Visitor/v1
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Operation/v1))
    $methods: [
        $isType: [
            $description: "
                This method implements the `$isType` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $candidate in ancestry(target) do {
                    if candidate = type then {
                        return true
                    }
                }
                return false
            }
        ]($type: /nebula/aspects/Method/v1)
        $type: [
            $description: "
                This method implements the `$type` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return ancestry(target)[1]
            }
        ]($type: /nebula/aspects/Method/v1)
        $ancestry: [
            $description: "
                This method implements the `$ancestry` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return ancestry(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $isParameterized: [
            $description: "
                This method implements the `$isParameterized` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return NOT parameters(target) = none
            }
        ]($type: /nebula/aspects/Method/v1)
        $parameter: [
            $description: "
                This method implements the `$parameter` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := parameters(target)
                if result then {
                    return result.getAttribute(key)
                }
                return none
            }
        ]($type: /nebula/aspects/Method/v1)
        $parameters: [
            $description: "
                This method implements the `$parameters` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return parameters(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $boolean: [
            $description: "
                This method implements the `$boolean` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return boolean(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $accept: [
            $description: "
                This method implements the `$accept` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                visitor.visitComponent(target)
            }
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
](
    $type: /nebula/types/Primitive/v1($existence: $abstract)
    $tag: #7Q5M85VYL5TVT37FHH0W5N5XJ9PCR7R8
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
