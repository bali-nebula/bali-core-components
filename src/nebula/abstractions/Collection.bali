[
    $parent: /nebula/abstractions/Component/v1
    $description: "
        This abstract primitive type defines the operations that a collection component can respond to. It
        also provides a compiled method implementation for some of the operations.
    "($mediaType: "application/bsmd")
    $parameters: [
        $itemType: [
            $description: "
                This parameter specifies the name of the type of the items in the collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/strings/Name/v1
            $default: /nebula/abstractions/Component/v1
        ]($type: /nebula/aspects/Parameter/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
    $interfaces: [
        /nebula/interfaces/Sequential/v1($itemType: itemType)
    ]($type: /nebula/collections/Set/v1($itemType: /nebula/strings/Name/v1))
    $operations: [
        $index: [
            $description: "
                This operation returns the index of the specified item in this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/interfaces/Discrete/v1($range: [0..<âˆž])
            $parameters: [
                $item: [
                    $description: "
                        This parameter specifies the item to be searched for in this collection.
                    "($mediaType: "application/bsmd")
                    $type: itemType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $addItem: [
            $description: "
                This operation adds the specified item to this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/abstractions/Collection/v1($itemType: itemType)
            $parameters: [
                $item: [
                    $description: "
                        This parameter specifies the item to be added to this collection.
                    "($mediaType: "application/bsmd")
                    $type: itemType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $addItems: [
            $description: "
                This operation adds the items in the specified collection to this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/abstractions/Collection/v1($itemType: itemType)
            $parameters: [
                $items: [
                    $description: "
                        This parameter specifies the collection of items to be added to this collection.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/abstractions/Collection/v1($itemType: itemType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $containsItem: [
            $description: "
                This operation returns whether or not the specified item in contained in this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
            $parameters: [
                $item: [
                    $description: "
                        This parameter specifies the item to be searched for in this collection.
                    "($mediaType: "application/bsmd")
                    $type: itemType
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $containsAny: [
            $description: "
                This operation returns whether or not any of the specified items are contained in this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
            $parameters: [
                $items: [
                    $description: "
                        This parameter specifies the collection of items to be searched for in this collection.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/abstractions/Collection/v1($itemType: itemType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $containsAll: [
            $description: "
                This operation returns whether or not all of the specified items are contained in this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/elements/Boolean/v1
            $parameters: [
                $items: [
                    $description: "
                        This parameter specifies the collection of items to be searched for in this collection.
                    "($mediaType: "application/bsmd")
                    $type: /nebula/abstractions/Collection/v1($itemType: itemType)
                ]($type: /nebula/aspects/Parameter/v1)
            ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Parameter/v1))
        ]($type: /nebula/aspects/Operation/v1)
        $emptyCollection: [
            $description: "
                This operation removes all items from this collection.
            "($mediaType: "application/bsmd")
            $type: /nebula/abstractions/Collection/v1($itemType: itemType)
        ]($type: /nebula/aspects/Operation/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Operation/v1))
    $methods: [
        $size: [
            $description: "
                This method implements the `$size` operation specified in the
                `/nebula/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return size(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $isEmpty: [
            $description: "
                This method implements the `$isEmpty` operation specified in the
                `/nebula/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return size(target) = 0
            }
        ]($type: /nebula/aspects/Method/v1)
        $item: [
            $description: "
                This method implements the `$item` operation specified in the
                `/nebula/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return item(target, index)
            }
        ]($type: /nebula/aspects/Method/v1)
        $items: [
            $description: "
                This method implements the `$items` operation specified in the
                `/nebula/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := duplicate(target, true)
                with each $index in indices do {
                    $item := item(target, index)
                    addItem(result, item)
                }
                return result
            }
        ]($type: /nebula/aspects/Method/v1)
        $iterator: [
            $description: "
                This method implements the `$iterator` operation from the
                `/nebula/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return iterator(target)
            }
        ]($type: /nebula/aspects/Method/v1)
        $index: [
            $description: "
                This method implements the `$index` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                $index := 0
                with each $candidate in target do {
                    $index += 1
                    if candidate = item then {
                        return index
                    }
                }
                return 0
            }
        ]($type: /nebula/aspects/Method/v1)
        $addItem: [
            $description: "
                This method implements the `$addItem` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return addItem(target, item)
            }
        ]($type: /nebula/aspects/Method/v1)
        $addItems: [
            $description: "
                This method implements the `$addItems` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $item in items do {
                    addItem(target, item)
                }
                return target
            }
        ]($type: /nebula/aspects/Method/v1)
        $containsItem: [
            $description: "
                This method implements the `$containsItem` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $candidate in target do {
                    if candidate = item then {
                        return true
                    }
                }
                return false
            }
        ]($type: /nebula/aspects/Method/v1)
        $containsAny: [
            $description: "
                This method implements the `$containsAny` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $item in items do {
                    if target.containsItem(item) then {
                        return true
                    }
                }
                return false
            }
        ]($type: /nebula/aspects/Method/v1)
        $containsAll: [
            $description: "
                This method implements the `$containsAll` operation from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $item in items do {
                    if NOT target.containsItem(item) then {
                        return false
                    }
                }
                return true
            }
        ]($type: /nebula/aspects/Method/v1)
        $emptyCollection: [
            $description: "
                This method implements the `$emptyCollection` message from this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return emptyCollection(target)
            }
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
](
    $type: /nebula/types/Primitive/v1($existence: $abstract)
    $tag: #24620A7W8TFYHN03A7Y2AQYZ7GMLATWZ
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
