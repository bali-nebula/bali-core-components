[
    $description: "
        This primitive type implements an intrinsic comparator which orders components in their _natural_
        order.
    "($mediaType: "application/bsmd")
    $parent: /nebula/agents/Comparator/v1
    $methods: [
        $accept: [
            $description: "
                This method implements the `$accept` message inherited from the
                `/nebula/abstractions/Component/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                visitor.visitComparator(target)
            }
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $visitor
                NOTE --Place a list of the message arguments on the stack.
                CALL $list
                PUSH ARGUMENT $target
                CALL $addItem WITH 2 ARGUMENTS
                NOTE --Send the message with its arguments to the recipient.
                SEND $visitComparator TO COMPONENT WITH ARGUMENTS
                SAVE VARIABLE $result-1
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
            ]
            $bytecode: '6002C0453801D001E801800160015000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $result-1
                $visitor
            ]($type: /nebula/collections/Set/v1)
            $messages: [
                $visitComparator
            ]($type: /nebula/collections/Set/v1)
        ]($type: /nebula/aspects/Method/v1)
        $areEqual: [
            $description: "
                This method implements the `$areEqual` message inherited from the
                `/nebula/agents/Comparator/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return areEqual(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $first
                LOAD VARIABLE $second
                CALL $areEqual WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '60016002D0075000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $first
                $second
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
        ]($type: /nebula/aspects/Method/v1)
        $doesMatch: [
            $description: "
                This method implements the `$doesMatch` message inherited from the
                `/nebula/agents/Comparator/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return doesMatch(component, pattern)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $component
                LOAD VARIABLE $pattern
                CALL $doesMatch WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '60016002D0255000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $component
                $pattern
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
        ]($type: /nebula/aspects/Method/v1)
        $ranking: [
            $description: "
                This method implements the `$ranking` message inherited from the
                `/nebula/agents/Comparator/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return ranking(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $first
                LOAD VARIABLE $second
                CALL $ranking WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '60016002D0605000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $first
                $second
            ]($type: /nebula/collections/Set/v1)
            $messages: [ ]($type: /nebula/collections/Set/v1)
        ]($type: /nebula/aspects/Method/v1)
    ]($type: /nebula/collections/Catalog/v1($valueType: /nebula/aspects/Method/v1))
    $literals: [ ]($type: /nebula/collections/Set/v1)
](
    $type: /nebula/types/Primitive/v1($existence: $abstract)
    $tag: #GQYQJJN6SKVGBPG0ZS3H98VNFYL3ZMX4
    $version: v1
    $permissions: /nebula/permissions/public/v1
    $previous: none
)
