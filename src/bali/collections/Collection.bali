[
    $description: "
        This abstract class defines the procedures for the messages that all collection components
        support.
    "($mediatype: "application/bsmd")
    $parent: /bali/types/Component/v1
    $parameters: [:]
    $constants: [:]
    $interfaces: [
        /bali/interfaces/Sequential/v1
    ]
    $procedures: [
        $addItem: [
            $description: "
                This procedure attempts to add the specified item to this collection.  The updated
                collection is returned.
            "($mediatype: "application/bsmd")
            $type: /bali/types/Collection/v1
            $source: {
                throw [
                    $module: /bali/types/Collection
                    $procedure: $addItem
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subclass."
                ]
            }($item: /bali/types/Component/v1)
        ]
        $addItems: [
            $description: "
                This procedure attempts to add the specified sequence of items to this collection.
                The updated collection is returned.
            "($mediatype: "application/bsmd")
            $type: /bali/types/Collection/v1
            $source: {
                with each $item in items do {
                    target.addItem(item)
                }
                return target
            }($items: /bali/interfaces/Sequential/v1)
        ]
        $containsAll: [
            $description: "
                This procedure determines whether or not this collection contains all of the
                specified items.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $source: {
                with each $item in items do {
                    if NOT target.containsItem(item) then {
                        return false
                    }
                }
                return true
            }($items: /bali/interfaces/Sequential/v1)
        ]
        $containsAny: [
            $description: "
                This procedure determines whether or not this collection contains any of the
                specified items.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $source: {
                with each $item in items do {
                    if target.containsItem(item) then {
                        return true
                    }
                }
                return false
            }($items: /bali/interfaces/Sequential/v1)
        ]
        $containsItem: [
            $description: "
                This procedure determines whether or not this collection contains the specified
                item.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $source: {
                return target.index(item) > 0
            }($item: /bali/types/Component/v1)
        ]
        $index: [
            $description: "
                This procedure returns the index of the specified item from this collection, or 0
                if it is not found.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Number/v1($range: 0..)
            $source: {
                $index := 0
                with each $candidate in target do {
                    $index := index + 1
                    if candidate = item then {
                        break loop
                    }
                }
                return index
            }($item: /bali/types/Component/v1)
        ]
        $isEmpty: [
            $description: "
                This procedure determines whether or not this collection is empty.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $source: {
                return target.size() = 0
            }
        ]
        $item: [
            $description: "
                This procedure returns from this collection the item corresponding to the specified
                index.
            "($mediatype: "application/bsmd")
            $type: /bali/types/Component/v1
            $source: {
                $iterator := target.iterator()
                iterator.toSlot(index)
                return iterator.previous()
            }($index: /bali/elements/Number/v1($range: 0..))
        ]
        $items: [
            $description: "
                This procedure returns from this collection the subset of items in the specified
                range.
            "($mediatype: "application/bsmd")
            $type: /bali/types/Collection/v1
            $source: {
                $items := [ ]
                with each $index in range do {
                    items.addItem(target[index])
                }
                return items
            }($range: /bali/collections/Range/v1)
        ]
        $iterator: [
            $description: "
                This procedure returns an iterator that can be used to visit, in order, each item
                in this collection.
            "($mediatype: "application/bsmd")
            $type: /bali/types/Iterator/v1
            $source: {
                throw [
                    $module: /bali/types/Collection
                    $procedure: $iterator
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subclass."
                ]
            }
        ]
        $size: [
            $description: "
                This procedure returns the number of items contained in this collection.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Number/v1($range: 0..)
            $source: {
                throw [
                    $module: /bali/types/Collection
                    $procedure: $size
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subclass."
                ]
            }
        ]
    ]
](
    $name: /bali/types/Collection/v1
    $type: /bali/types/Primitive/v1($existence: $abstract)
    $tag: #69KMNPGSBDXWLBATY5PR9GSNM9MV7GV2
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
