[
    $description: "
        This primitive type defines the messages that a list component can respond to. It
        also provides a compiled method implementation for each message.
    "($mediaType: "application/bsmd")
    $parameters: [
        $itemType: [
            $description: "
                This parameter specifies the name of the type of the values in the list.
            "($mediaType: "application/bsmd")
            $type: /bali/strings/Name/v1
            $default: /bali/abstractions/Component/v1
        ]($type: /bali/aspects/Parameter/v1)
    ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Parameter/v1))
    $parent: /bali/abstractions/Collection/v1($itemType: itemType)
    $libraries: [
        /bali/libraries/Chainable/v1($itemType: itemType)
    ]($type: /bali/collections/Set/v1($itemType: /bali/strings/Name/v1))
    $interfaces: [
        /bali/interfaces/Composite/v1(
            $keyType: /bali/interfaces/Discrete
            $valueType: itemType
        )
        /bali/interfaces/Sortable/v1($itemType: itemType)
    ]($type: /bali/collections/Set/v1($itemType: /bali/strings/Name/v1))
    $messages: [
        $keys: [
            $description: "
                This message returns a list of the keys for this catalog.
            "($mediaType: "application/bsmd")
            $type: /bali/collections/List/v1($itemType: keyType)
        ]($type: /bali/aspects/Message/v1)
        $removeAttribute: [
            $description: "
                This message removes the attribute value associated with the specified key
                from this catalog.
            "($mediaType: "application/bsmd")
            $type: /bali/collections/Catalog/v1(
                $keyType: keyType
                $valueType: valueType
            )
            $parameters: [
                $key: [
                    $description: "
                        This parameter specifies the key to be used to extract the attribute value.
                    "($mediaType: "application/bsmd")
                    $type: keyType
                ]($type: /bali/aspects/Parameter/v1)
            ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Parameter/v1))
        ]($type: /bali/aspects/Message/v1)
        $removeAttributes: [
            $description: "
                This message removes the attribute values associated with the specified list of keys
                from this catalog.
            "($mediaType: "application/bsmd")
            $type: /bali/collections/Catalog/v1(
                $keyType: keyType
                $valueType: valueType
            )
            $parameters: [
                $keys: [
                    $description: "
                        This parameter specifies the list of keys to be used to extract the
                        attribute values.
                    "($mediaType: "application/bsmd")
                    $type: /bali/collections/List/v1($itemType: keyType)
                ]($type: /bali/aspects/Parameter/v1)
            ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Parameter/v1))
        ]($type: /bali/aspects/Message/v1)
    ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Message/v1))
    $methods: [
        $accept: [
            $description: "
                This method implements the `$accept` message inherited from the
                `/bali/abstractions/Component/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                visitor.visitCatalog(target)
            }
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $visitor
                NOTE --Place a list of the message arguments on the stack.
                CALL $list
                PUSH ARGUMENT $target
                CALL $addItem WITH 2 ARGUMENTS
                NOTE --Send the message with its arguments to the recipient.
                SEND $visitCatalog TO COMPONENT WITH ARGUMENTS
                SAVE VARIABLE $result-1
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
            ]
            $bytecode: '6002C0423801D001E801800160015000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $result-1
                $visitor
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $visitCatalog
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $keys: [
            $description: "
                This method implements the `$keys` message for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return keys(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $keys WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '3801C83E5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [ ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $removeAttribute: [
            $description: "
                This method implements the `$removeAttribute` message for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                return removeAttribute(target, key)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $key
                CALL $removeAttribute WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '38016001D0615000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $key
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $removeAttributes: [
            $description: "
                This method implements the `$removeAttributes` message for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                with each $key in keys do {
                    removeAttribute(target, key)
                }
                return target
            }
            $instructions: "
                1.WithStatement:
                LOAD VARIABLE $keys
                SEND $iterator TO COMPONENT
                SAVE VARIABLE $iterator-2
                
                1.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 1.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                SAVE VARIABLE $key
                
                1.1.1.EvaluateStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $key
                CALL $removeAttribute WITH 2 ARGUMENTS
                SAVE VARIABLE $result-1
                
                1.ConditionRepeat:
                JUMP TO 1.1.ConditionClause
                
                1.WithStatementDone:
                JUMP TO NEXT INSTRUCTION
                
                2.ReturnStatement:
                PUSH ARGUMENT $target
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.WithStatement": 1
                "1.1.ConditionClause": 4
                "1.1.1.EvaluateStatement": 10
                "1.ConditionRepeat": 14
                "1.WithStatementDone": 15
                "2.ReturnStatement": 16
            ]
            $bytecode: '
                6003E00280016001E001180F6001E003800238016002D061800400040000
                38015000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $iterator-2
                $key
                $keys
                $result-1
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $sortItems: [
            $description: "
                This method implements the `$sortItems` message from the
                `/bali/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return sortItems(target, comparator)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $comparator
                CALL $sortItems WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '38016001D0765000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $comparator
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $reverseItems: [
            $description: "
                This method implements the `$reverseItems` message from the
                `/bali/interfaces/Sortable/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return reverseItems(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $reverseItems WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '3801C8665000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [ ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $attribute: [
            $description: "
                This method implements the `$attribute` message from the
                `/bali/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return attribute(target, key)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $key
                CALL $attribute WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '38016001D00A5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $key
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $setAttribute: [
            $description: "
                This method implements the `$setAttribute` message from the
                `/bali/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return setAttribute(target, key, value)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $key
                LOAD VARIABLE $value
                CALL $setAttribute WITH 3 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '380160016002D86D5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $key
                $value
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $attributes: [
            $description: "
                This method implements the `$attributes` message from the
                `/bali/interfaces/Composite/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := [ ]
                with each $key in target do {
                    addItem(result, attribute(target, key))
                }
                return result
            }
            $instructions: "
                1.EvaluateStatement:
                NOTE --Place an empty list on the stack.
                CALL $list
                SAVE VARIABLE $result
                
                2.WithStatement:
                PUSH ARGUMENT $target
                SEND $iterator TO COMPONENT
                SAVE VARIABLE $iterator-2
                
                2.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 2.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                SAVE VARIABLE $key
                
                2.1.1.EvaluateStatement:
                LOAD VARIABLE $result
                PUSH ARGUMENT $target
                LOAD VARIABLE $key
                CALL $attribute WITH 2 ARGUMENTS
                CALL $addItem WITH 2 ARGUMENTS
                SAVE VARIABLE $result-1
                
                2.ConditionRepeat:
                JUMP TO 2.1.ConditionClause
                
                2.WithStatementDone:
                JUMP TO NEXT INSTRUCTION
                
                3.ReturnStatement:
                LOAD VARIABLE $result
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
                "2.WithStatement": 3
                "2.1.ConditionClause": 6
                "2.1.1.EvaluateStatement": 12
                "2.ConditionRepeat": 18
                "2.WithStatementDone": 19
                "3.ReturnStatement": 20
            ]
            $bytecode: '
                C04280033801E00280016001E00118136001E0038002600338016002D00A
                D00180040006000060035000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $iterator-2
                $key
                $result
                $result-1
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $Extraction: [
            $description: "
                This method implements the `$Extraction` function for this class.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := duplicate(catalog, false)
                with each $key in keys do {
                    setAttribute(result, key, attribute(catalog, key))
                }
                return result
            }
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $catalog
                PUSH LITERAL `false`
                CALL $duplicate WITH 2 ARGUMENTS
                SAVE VARIABLE $result
                
                2.WithStatement:
                LOAD VARIABLE $keys
                SEND $iterator TO COMPONENT
                SAVE VARIABLE $iterator-2
                
                2.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 2.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                SAVE VARIABLE $key
                
                2.1.1.EvaluateStatement:
                LOAD VARIABLE $result
                LOAD VARIABLE $key
                LOAD VARIABLE $catalog
                LOAD VARIABLE $key
                CALL $attribute WITH 2 ARGUMENTS
                CALL $setAttribute WITH 3 ARGUMENTS
                SAVE VARIABLE $result-1
                
                2.ConditionRepeat:
                JUMP TO 2.1.ConditionClause
                
                2.WithStatementDone:
                JUMP TO NEXT INSTRUCTION
                
                3.ReturnStatement:
                LOAD VARIABLE $result
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
                "2.WithStatement": 5
                "2.1.ConditionClause": 8
                "2.1.1.EvaluateStatement": 14
                "2.ConditionRepeat": 21
                "2.WithStatementDone": 22
                "3.ReturnStatement": 23
            ]
            $bytecode: '
                60012801D02580056004E00280026002E00118166002E003800360056003
                60016003D00AD86D80060008000060055000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $catalog
                $iterator-2
                $key
                $keys
                $result
                $result-1
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $Chain: [
            $description: "
                This method implements the `$Chain` function specified in the
                `/bali/libraries/Chainable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return chain(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $first
                LOAD VARIABLE $second
                CALL $chain WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '60016002D0145000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $first
                $second
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
    ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Method/v1))
    $literals: [
        false
    ]($type: /bali/collections/Set/v1)
](
    $type: /bali/types/Primitive/v1
    $tag: #QTGVXYK9W1BAML2DV4A0N6FCH7G4XHCV
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
