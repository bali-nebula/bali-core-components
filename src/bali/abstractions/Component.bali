[
    $description: "
        This abstract primitive type defines the procedures for the messages that all components support.
    "($mediatype: "application/bsmd")
    $parent: none
    $parameters: [:]
    $constants: [:]
    $interfaces: [ ]
    $procedures: [
        $ancestry: [
            $description: "
                This procedure returns a list of the type names of the ancestors for this type of
                component.
            "($mediatype: "application/bsmd")
            $type: /bali/collections/List/v1($ItemType: /bali/elements/Name/v1)
            $source: {
                $ancestry := [ ]
                $current := type(target)
                while current do {
                    ancestry.addItem(current)
                    $current := @(current[$parent])
                }
                return ancestry
            }
            $instructions: "
                1.EvaluateStatement:
                INVOKE $list
                STORE VARIABLE $ancestry
                
                2.EvaluateStatement:
                LOAD VARIABLE $target
                INVOKE $type WITH 1 ARGUMENT
                STORE VARIABLE $current
                
                3.WhileStatement:
                SKIP INSTRUCTION
                
                3.1.ConditionClause:
                LOAD VARIABLE $current
                JUMP TO 3.WhileStatementDone ON FALSE
                
                3.1.1.EvaluateStatement:
                LOAD VARIABLE $ancestry
                INVOKE $list
                LOAD VARIABLE $current
                INVOKE $addItem WITH 2 ARGUMENTS
                SEND $addItem TO COMPONENT WITH ARGUMENTS
                STORE VARIABLE $$result
                
                3.1.2.EvaluateStatement:
                LOAD VARIABLE $current
                PUSH LITERAL `$parent`
                INVOKE $subcomponent WITH 2 ARGUMENTS
                STORE VARIABLE $$location-1
                LOAD DOCUMENT $$location-1
                STORE VARIABLE $current
                
                3.ConditionRepeat:
                JUMP TO 3.1.ConditionClause
                
                3.WhileStatementDone:
                SKIP INSTRUCTION
                
                4.ReturnStatement:
                LOAD VARIABLE $ancestry
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '
                A04980016005A88580020000600218166001A0496002B001C80180046002
                2801B07A800378038002000700006001E000
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.EvaluateStatement": 1
                "2.EvaluateStatement": 3
                "3.WhileStatement": 6
                "3.1.ConditionClause": 7
                "3.1.1.EvaluateStatement": 9
                "3.1.2.EvaluateStatement": 15
                "3.ConditionRepeat": 21
                "3.WhileStatementDone": 22
                "4.ReturnStatement": 23
            ]
            $parameters: [ ]
            $variables: [
                $ancestry
                $current
                $$location-1
                $$result
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $addItem
            ]($type: /bali/collections/Set/v1)
        ]
        $isA: [
            $description: "
                This procedure determines whether or not the ancestry of this component includes
                the specified named type.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $arguments: [
                $type: [
                    $description: "
                        This argument specifies the name of the type to be searched for in this
                        component's ancestry.
                    "($mediatype: "application/bsmd")
                    $type: /bali/elements/Name/v1
                ]
            ]
            $source: {
                $current := type(target)
                while current do {
                    if current = type then {
                        return true
                    }
                    $current := @(current[$parent])
                }
                return false
            }($type: /bali/elements/Name/v1)
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $target
                INVOKE $type WITH 1 ARGUMENT
                STORE VARIABLE $current
                
                2.WhileStatement:
                SKIP INSTRUCTION
                
                2.1.ConditionClause:
                LOAD VARIABLE $current
                JUMP TO 2.WhileStatementDone ON FALSE
                
                2.1.1.IfStatement:
                SKIP INSTRUCTION
                
                2.1.1.1.ConditionClause:
                LOAD VARIABLE $current
                PUSH PARAMETER $type
                INVOKE $areEqual WITH 2 ARGUMENTS
                JUMP TO 2.1.1.IfStatementDone ON FALSE
                
                2.1.1.1.1.ReturnStatement:
                PUSH LITERAL `true`
                HANDLE RESULT
                
                2.1.1.IfStatementDone:
                SKIP INSTRUCTION
                
                2.1.2.EvaluateStatement:
                LOAD VARIABLE $current
                PUSH LITERAL `$parent`
                INVOKE $subcomponent WITH 2 ARGUMENTS
                STORE VARIABLE $$location-1
                LOAD DOCUMENT $$location-1
                STORE VARIABLE $current
                
                2.ConditionRepeat:
                JUMP TO 2.1.ConditionClause
                
                2.WhileStatementDone:
                SKIP INSTRUCTION
                
                3.ReturnStatement:
                PUSH LITERAL `false`
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '
                6003A8858001000060011816000060013801B008180E2802E00000006001
                2801B07A800278028001000500002803E000
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.EvaluateStatement": 1
                "2.WhileStatement": 4
                "2.1.ConditionClause": 5
                "2.1.1.IfStatement": 7
                "2.1.1.1.ConditionClause": 8
                "2.1.1.1.1.ReturnStatement": 12
                "2.1.1.IfStatementDone": 14
                "2.1.2.EvaluateStatement": 15
                "2.ConditionRepeat": 21
                "2.WhileStatementDone": 22
                "3.ReturnStatement": 23
            ]
            $parameters: [
                $type
            ]
            $variables: [
                $current
                $$location-1
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $isParameterized: [
            $description: "
                This procedure determines whether or not this component is parameterized.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $source: {
                return isParameterized(target)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $target
                INVOKE $isParameterized WITH 1 ARGUMENT
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '6001A83CE000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $parameter: [
            $description: "
                This procedure returns a catalog of any parameters that were used to parameterize
                this component.
            "($mediatype: "application/bsmd")
            $type: /bali/abstractions/Component/v1
            $arguments: [
                $key: [
                    $description: "
                        This argument specifies the key for the parameter value to be returned.
                    "($mediatype: "application/bsmd")
                    $type: /bali/elements/Symbol/v1
                ]
            ]
            $source: {
                return parameter(target, key)
            }($key: /bali/elements/Symbol/v1)
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $target
                PUSH PARAMETER $key
                INVOKE $parameter WITH 2 ARGUMENTS
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '60013801B052E000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $parameters: [
                $key
            ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $parameters: [
            $description: "
                This procedure returns a catalog of any parameters that were used to parameterize
                this component.
            "($mediatype: "application/bsmd")
            $type: /bali/collections/Catalog/v1
            $source: {
                return parameters(target)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $target
                INVOKE $parameters WITH 1 ARGUMENT
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '6001A853E000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $type: [
            $description: "
                This procedure returns the name of the type of this component.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Name/v1
            $source: {
                return type(target)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $target
                INVOKE $type WITH 1 ARGUMENT
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '6001A885E000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
    ]
    $literals: [
        $parent
        true
        false
    ]
](
    $name: /bali/abstractions/Component/v1
    $type: /bali/types/Primitive/v1($existence: $abstract)
    $tag: #GC5TG7QPT80BM6243Z15SKR0NB59KD94
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
