[
    $description: "
        This abstract primitive type defines the methods for the messages that all elemental
        string types support. Since strings are elemental they are immutable.
    "($mediatype: "application/bsmd")
    $parent: /bali/abstractions/Element/v1
    $parameters: [
        $itemType: [
            $description: "
                This parameter specifies the type of items that a string of this type contains.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Name/v1
        ]
    ]
    $interfaces: [
        /bali/abstractions/Sequential/v1($itemType: $itemType)
    ]
    $methods: [
        $index: [
            $description: "
                This method returns the index of the specified item from this string, or 0
                if it is not found.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Number/v1($range: 0..)
            $arguments: [
                $item: [
                    $description: "
                        This argument specifies the item in the string for which the index should
                        be returned.
                    "($mediatype: "application/bsmd")
                    $type: $itemType
                ]
            ]
            $procedure: {
                $index := 0
                with each $candidate in target do {
                    $index := index + 1
                    if candidate = item then {
                        break loop
                    }
                }
                return index
            }($item: $itemType)
            $instructions: "
                1.EvaluateStatement:
                PUSH LITERAL `0`
                STORE VARIABLE $index
                
                2.WithStatement:
                LOAD VARIABLE $target
                SEND $iterator TO COMPONENT
                STORE VARIABLE $iterator-2
                
                2.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 2.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                STORE VARIABLE $candidate
                
                2.1.1.EvaluateStatement:
                LOAD VARIABLE $index
                PUSH LITERAL `1`
                INVOKE $sum WITH 2 ARGUMENTS
                STORE VARIABLE $index
                
                2.1.2.IfStatement:
                SKIP INSTRUCTION
                
                2.1.2.1.ConditionClause:
                LOAD VARIABLE $candidate
                PUSH PARAMETER $item
                INVOKE $areEqual WITH 2 ARGUMENTS
                JUMP TO 2.1.2.IfStatementDone ON FALSE
                
                2.1.2.1.1.BreakStatement:
                JUMP TO 2.WithStatementDone
                
                2.1.2.IfStatementDone:
                SKIP INSTRUCTION
                
                2.ConditionRepeat:
                JUMP TO 2.1.ConditionClause
                
                2.WithStatementDone:
                SKIP INSTRUCTION
                
                3.ReturnStatement:
                LOAD VARIABLE $index
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '
                280180026004C00280036003C00118186003C003800160022802B07B8002
                000060013801B008181600180000000600006002E000
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.EvaluateStatement": 1
                "2.WithStatement": 3
                "2.1.ConditionClause": 6
                "2.1.1.EvaluateStatement": 12
                "2.1.2.IfStatement": 16
                "2.1.2.1.ConditionClause": 17
                "2.1.2.1.1.BreakStatement": 21
                "2.1.2.IfStatementDone": 22
                "2.ConditionRepeat": 23
                "2.WithStatementDone": 24
                "3.ReturnStatement": 25
            ]
            $parameters: [
                $item
            ]
            $variables: [
                $candidate
                $index
                $iterator-2
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /bali/collections/Set/v1)
        ]
        $isEmpty: [
            $description: "
                This method determines whether or not this string is empty.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Probability/v1($granularity: $boolean)
            $procedure: {
                return target.size() = 0
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $target
                SEND $size TO COMPONENT
                PUSH LITERAL `0`
                INVOKE $areEqual WITH 2 ARGUMENTS
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '6001C0012801B008E000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $size
            ]($type: /bali/collections/Set/v1)
        ]
        $item: [
            $description: "
                This method returns from this string the item corresponding to the specified
                index.
            "($mediatype: "application/bsmd")
            $type: $itemType
            $arguments: [
                $index: [
                    $description: "
                        This argument specifies the index of the item to be returned from this
                        string.
                    "($mediatype: "application/bsmd")
                    $type: /bali/elements/Number/v1
                ]
            ]
            $procedure: {
                $iterator := target.iterator()
                iterator.toSlot(index)
                return iterator.previous()
            }($index: /bali/elements/Number/v1)
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $target
                SEND $iterator TO COMPONENT
                STORE VARIABLE $iterator
                
                2.EvaluateStatement:
                LOAD VARIABLE $iterator
                INVOKE $list
                PUSH PARAMETER $index
                INVOKE $addItem WITH 2 ARGUMENTS
                SEND $toSlot TO COMPONENT WITH ARGUMENTS
                STORE VARIABLE $result-1
                
                3.ReturnStatement:
                LOAD VARIABLE $iterator
                SEND $previous TO COMPONENT
                HANDLE RESULT
            "($mediatype: "application/basm")
            $bytecode: '6003C00180016001A0493801B001C80380026001C002E000'(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.EvaluateStatement": 1
                "2.EvaluateStatement": 4
                "3.ReturnStatement": 10
            ]
            $parameters: [
                $index
            ]
            $variables: [
                $iterator
                $result-1
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $iterator
                $previous
                $toSlot
            ]($type: /bali/collections/Set/v1)
        ]
        $items: [
            $description: "
                This method returns from this string the subset of items in the specified
                range.
            "($mediatype: "application/bsmd")
            $type: /bali/abstractions/String/v1($itemType: $itemType)
            $arguments: [
                $range: [
                    $description: "
                        This argument specifies the range of indices for the subset of this
                        string to be returned.
                    "($mediatype: "application/bsmd")
                    $type: /bali/elements/Range/v1
                ]
            ]
            $procedure: {
                throw [
                    $module: /bali/abstractions/String/v1
                    $method: $items
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subtype."
                ]
            }($range: /bali/elements/Range/v1)
            $instructions: "
                1.ThrowStatement:
                INVOKE $catalog
                PUSH LITERAL `$module`
                PUSH LITERAL `/bali/abstractions/String/v1`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$method`
                PUSH LITERAL `$items`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$exception`
                PUSH LITERAL `$abstractMethod`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$text`
                PUSH LITERAL `"An abstract method must be implemented by a subtype."`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                HANDLE EXCEPTION
            "($mediatype: "application/basm")
            $bytecode: '
                A01428032804B00BB00128052806B00BB00128072808B00BB0012809280A
                B00BB001E800
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ThrowStatement": 1
            ]
            $parameters: [
                $range
            ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $iterator: [
            $description: "
                This method returns an iterator that can be used to visit, in order, each item
                in this string.
            "($mediatype: "application/bsmd")
            $type: /bali/collections/Iterator/v1($itemType: $itemType)
            $procedure: {
                throw [
                    $module: /bali/abstractions/String/v1
                    $method: $iterator
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subtype."
                ]
            }
            $instructions: "
                1.ThrowStatement:
                INVOKE $catalog
                PUSH LITERAL `$module`
                PUSH LITERAL `/bali/abstractions/String/v1`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$method`
                PUSH LITERAL `$iterator`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$exception`
                PUSH LITERAL `$abstractMethod`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$text`
                PUSH LITERAL `"An abstract method must be implemented by a subtype."`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                HANDLE EXCEPTION
            "($mediatype: "application/basm")
            $bytecode: '
                A01428032804B00BB0012805280BB00BB00128072808B00BB0012809280A
                B00BB001E800
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ThrowStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
        $size: [
            $description: "
                This method returns the number of items contained in this string.
            "($mediatype: "application/bsmd")
            $type: /bali/elements/Number/v1($range: 0..)
            $procedure: {
                throw [
                    $module: /bali/abstractions/String/v1
                    $method: $size
                    $exception: $abstractMethod
                    $text: "An abstract method must be implemented by a subtype."
                ]
            }
            $instructions: "
                1.ThrowStatement:
                INVOKE $catalog
                PUSH LITERAL `$module`
                PUSH LITERAL `/bali/abstractions/String/v1`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$method`
                PUSH LITERAL `$size`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$exception`
                PUSH LITERAL `$abstractMethod`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                PUSH LITERAL `$text`
                PUSH LITERAL `"An abstract method must be implemented by a subtype."`
                INVOKE $association WITH 2 ARGUMENTS
                INVOKE $addItem WITH 2 ARGUMENTS
                HANDLE EXCEPTION
            "($mediatype: "application/basm")
            $bytecode: '
                A01428032804B00BB0012805280CB00BB00128072808B00BB0012809280A
                B00BB001E800
            '(
                $encoding: $base16
                $mediatype: "application/bcod"
            )
            $addresses: [
                "1.ThrowStatement": 1
            ]
            $parameters: [ ]
            $variables: [
                $target
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]
    ]
    $literals: [
        0
        1
        $module
        /bali/abstractions/String/v1
        $method
        $items
        $exception
        $abstractMethod
        $text
        "An abstract method must be implemented by a subtype."
        $iterator
        $size
    ]
](
    $name: /bali/abstractions/String/v1
    $type: /bali/types/Primitive/v1($existence: $abstract)
    $tag: #HZP5WG1CK0A423FGZVD6H31Y96Q5XJ2A
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
