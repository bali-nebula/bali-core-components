[
    $description: "
        This abstract primitive type defines the messages that a string component can respond to. It
        also provides a compiled method implementation for some of the messages.
    "($mediaType: "application/bsmd")
    $parameters: [
        $itemType: [
            $description: "
                This parameter specifies the name of the type of the items in the string.
            "($mediaType: "application/bsmd")
            $type: /bali/strings/Name/v1
            $default: /bali/strings/Text/v1
        ]($type: /bali/aspects/Parameter/v1)
    ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Parameter/v1))
    $interfaces: [
        /bali/interfaces/Sequential/v1($itemType: itemType)
    ]($type: /bali/collections/Set/v1($itemType: /bali/strings/Name/v1))
    $methods: [
        $accept: [
            $description: "
                This method implements the `$accept` message inherited from the
                `/bali/abstractions/Component/v1` class.
            "($mediaType: "application/bsmd")
            $procedure: {
                visitor.visitString(target)
            }
            $instructions: "
                1.EvaluateStatement:
                LOAD VARIABLE $visitor
                NOTE --Place a list of the message arguments on the stack.
                CALL $list
                PUSH ARGUMENT $target
                CALL $addItem WITH 2 ARGUMENTS
                NOTE --Send the message with its arguments to the recipient.
                SEND $visitString TO COMPONENT WITH ARGUMENTS
                SAVE VARIABLE $result-1
                LOAD VARIABLE $result-1
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
            ]
            $bytecode: '6002C0413801D001E801800160015000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $result-1
                $visitor
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $visitString
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $size: [
            $description: "
                This method implements the `$size` message specified in the
                `/bali/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return size(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $size WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '3801C8745000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [ ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $isEmpty: [
            $description: "
                This method implements the `$isEmpty` message specified in the
                `/bali/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return size(target) = 0
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $size WITH 1 ARGUMENT
                PUSH LITERAL `0`
                CALL $areEqual WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '3801C8742802D0075000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [ ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $item: [
            $description: "
                This method implements the `$item` message specified in the
                `/bali/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return item(target, index)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $index
                CALL $item WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '38016001D03B5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $index
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $items: [
            $description: "
                This method implements the `$items` message specified in the
                `/bali/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                $result := duplicate(target, false)
                with each $index in range do {
                    $item := item(target, index)
                    addItem(result, item)
                }
                return result
            }
            $instructions: "
                1.EvaluateStatement:
                PUSH ARGUMENT $target
                PUSH LITERAL `false`
                CALL $duplicate WITH 2 ARGUMENTS
                SAVE VARIABLE $result
                
                2.WithStatement:
                LOAD VARIABLE $range
                SEND $iterator TO COMPONENT
                SAVE VARIABLE $iterator-2
                
                2.1.ConditionClause:
                LOAD VARIABLE $iterator-2
                SEND $hasNext TO COMPONENT
                JUMP TO 2.WithStatementDone ON FALSE
                LOAD VARIABLE $iterator-2
                SEND $next TO COMPONENT
                SAVE VARIABLE $index
                
                2.1.1.EvaluateStatement:
                PUSH ARGUMENT $target
                LOAD VARIABLE $index
                CALL $item WITH 2 ARGUMENTS
                SAVE VARIABLE $item
                
                2.1.2.EvaluateStatement:
                LOAD VARIABLE $result
                LOAD VARIABLE $item
                CALL $addItem WITH 2 ARGUMENTS
                SAVE VARIABLE $result-1
                
                2.ConditionRepeat:
                JUMP TO 2.1.ConditionClause
                
                2.WithStatementDone:
                JUMP TO NEXT INSTRUCTION
                
                3.ReturnStatement:
                LOAD VARIABLE $result
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.EvaluateStatement": 1
                "2.WithStatement": 5
                "2.1.ConditionClause": 8
                "2.1.1.EvaluateStatement": 14
                "2.1.2.EvaluateStatement": 18
                "2.ConditionRepeat": 22
                "2.WithStatementDone": 23
                "3.ReturnStatement": 24
            ]
            $bytecode: '
                38012801D02580056004E00280036003E00118176003E003800138016001
                D03B800260056002D00180060008000060055000
            '(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $index
                $item
                $iterator-2
                $range
                $result
                $result-1
            ]($type: /bali/collections/Set/v1)
            $messages: [
                $hasNext
                $iterator
                $next
            ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $iterator: [
            $description: "
                This method implements the `$iterator` message from the
                `/bali/interfaces/Sequential/v1` interface.
            "($mediaType: "application/bsmd")
            $procedure: {
                return iterator(target)
            }
            $instructions: "
                1.ReturnStatement:
                PUSH ARGUMENT $target
                CALL $iterator WITH 1 ARGUMENT
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '3801C83C5000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [ ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
        $Chain: [
            $description: "
                This method implements the `$Chain` function specified in the
                `/bali/libraries/Chainable/v1` library.
            "($mediaType: "application/bsmd")
            $procedure: {
                return chain(first, second)
            }
            $instructions: "
                1.ReturnStatement:
                LOAD VARIABLE $first
                LOAD VARIABLE $second
                CALL $chain WITH 2 ARGUMENTS
                PULL RESULT
            "($mediaType: "application/basm")
            $addresses: [
                "1.ReturnStatement": 1
            ]
            $bytecode: '60016002D0145000'(
                $encoding: $base16
                $mediaType: "application/bcod"
            )
            $arguments: [
                $target
            ]
            $variables: [
                $first
                $second
            ]($type: /bali/collections/Set/v1)
            $messages: [ ]($type: /bali/collections/Set/v1)
        ]($type: /bali/aspects/Method/v1)
    ]($type: /bali/collections/Catalog/v1($valueType: /bali/aspects/Method/v1))
    $literals: [
        false
        0
    ]($type: /bali/collections/Set/v1)
](
    $type: /bali/types/Primitive/v1($existence: $abstract)
    $tag: #JXJG0XD44X9MD73KB3WGRH8SA5JVZZG5
    $version: v1
    $permissions: /bali/permissions/public/v1
    $previous: none
)
